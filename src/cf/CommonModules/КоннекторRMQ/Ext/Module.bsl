
#Область ПрограммныйИнтерфейс

Функция ОтправитьСообщениеВОчередь(ИсходящееСообщение) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НастройкиПодключенияRMQ = Справочники.НастройкиПодключенияRabbitMQ.ПараметрыНастроекПоУмолчанию();
	
	URL = СтрШаблон("http://%1/api/exchanges/%2/%3/publish",
		НастройкиПодключенияRMQ.АдресСервера,
		НастройкиПодключенияRMQ.Хост,
		ИсходящееСообщение.Обменник
	);
	
	Аутентификация = КоннекторHTTP.НоваяАутентификацияBasic(НастройкиПодключенияRMQ.ИмяПользователя, НастройкиПодключенияRMQ.Пароль);
	
	ДополнительныеПараметры = КоннекторHTTP.НовыеПараметры();
	ДополнительныеПараметры.Аутентификация = Аутентификация;
	
	Ответ = КоннекторHTTP.Post(URL, ИсходящееСообщение.Тело, ДополнительныеПараметры);
	
	Результат = Новый Структура;
	Результат.Вставить("Отправлено", Ответ.КодСостояния = 200);
	
	Возврат Результат;
	
КонецФункции

Функция ПрочитатьСообщенияИзОчереди() Экспорт
	
	НастройкиПодключенияRMQ = Справочники.НастройкиПодключенияRabbitMQ.ПараметрыНастроекПоУмолчанию();
	
	URL = СтрШаблон("http://%1/api/queues/%2/%3/get",
		НастройкиПодключенияRMQ.АдресСервера,
		НастройкиПодключенияRMQ.Хост,
		НастройкиПодключенияRMQ.Очередь
	);
	
	Аутентификация = КоннекторHTTP.НоваяАутентификацияBasic(НастройкиПодключенияRMQ.ИмяПользователя, НастройкиПодключенияRMQ.Пароль);
	
	ДополнительныеПараметры = КоннекторHTTP.НовыеПараметры();
	ДополнительныеПараметры.Аутентификация = Аутентификация;
	
	ТелоЗапроса = "{
	|""count"": 10,
	|""ackmode"": ""ack_requeue_false"",
	|""encoding"": ""auto""
	|}";
	
	Ответ = КоннекторHTTP.Post(URL, ТелоЗапроса, ДополнительныеПараметры);
	
	Сообщения = КоннекторHTTP.КакJson(Ответ, Новый Структура("ПрочитатьВСоответствие", Ложь));
	
	Для Каждого Сообщение Из Сообщения Цикл
		ВходящееСообщение = Документы.ВходящееСообщение.СоздатьВходящееСообщение(Сообщение["payload"], Сообщение["exchange"]);
		РаботаССообщениямиRMQ.ОбработатьВходящееСообщение(ВходящееСообщение);
	КонецЦикла;
	
КонецФункции

#КонецОбласти