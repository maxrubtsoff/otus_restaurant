
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ЗаполнитьСтатусЗаказа();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Не Объект.Ссылка.Пустая() Тогда
		ПодключитьОбработчикОжидания("ОбработчикОжиданияОбновитьСтатусЗаказаКлиента", 2);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПодключитьОбработчикОжидания("ОбработчикОжиданияОбновитьСтатусЗаказаКлиента", 2);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаполнитьСтатусЗаказа();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИзменитьСтатусЗаказа(Команда)
	
	Если Объект.Ссылка.Пустая() Тогда
		ПоказатьПредупреждение(, НСтр("ru='Заказ не создан, смена статуса невозможна'", "ru"));
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытияФормы = ПараметрыОткрытияФормыРегистраСтатусыЗаказов(Объект.Ссылка);
	
	Если Не ПараметрыОткрытияФормы.РазрешеноИзменятьСтатусЗаказа Тогда
		ПоказатьПредупреждение(, НСтр("ru='Текущий статус заказа не может быть изменен'", "ru"));
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("РегистрСведений.СтатусыЗаказов.ФормаЗаписи", ПараметрыОткрытияФормы.Параметры, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСтатусЗаказа()
	
	Статус = РегистрыСведений.СтатусыЗаказов.АктуальныйСтатусЗаказа(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОжиданияОбновитьСтатусЗаказаКлиента() Экспорт
	
	ЗаполнитьСтатусЗаказа();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПараметрыОткрытияФормыРегистраСтатусыЗаказов(ЗаказКлиента)
	
	ПараметрыОткрытияФормы = Новый Структура;
	
	РезультатПодготовкиПараметров = Новый Структура;
	РезультатПодготовкиПараметров.Вставить("РазрешеноИзменятьСтатусЗаказа", Истина);
	РезультатПодготовкиПараметров.Вставить("Параметры", ПараметрыОткрытияФормы);
	
	АктуальныйСтатусЗаказа = РегистрыСведений.СтатусыЗаказов.АктуальныйСтатусЗаказа(ЗаказКлиента);
	Если АктуальныйСтатусЗаказа = Перечисления.СтатусыЗаказовКлиентов.Готов Тогда
		НовыйСтатус = Перечисления.СтатусыЗаказовКлиентов.Подан;
	Иначе
		РезультатПодготовкиПараметров.РазрешеноИзменятьСтатусЗаказа = Ложь;
	КонецЕсли;
	
	Если РезультатПодготовкиПараметров.РазрешеноИзменятьСтатусЗаказа Тогда
		ЗначенияЗаполнения = Новый Структура;
		ЗначенияЗаполнения.Вставить("Заказ", ЗаказКлиента);
		ЗначенияЗаполнения.Вставить("Статус", НовыйСтатус);
		ПараметрыОткрытияФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	КонецЕсли;
	
	Возврат РезультатПодготовкиПараметров;
	
КонецФункции

#КонецОбласти

