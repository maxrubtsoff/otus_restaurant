
#Область ПрограммныйИнтерфейс

Процедура ИсполняемыеСценарии() Экспорт
	
	ЮТТесты
		.ДобавитьТест("ОбновитьСтатусЗаказа").УдалениеТестовыхДанных()
		.ДобавитьТест("ПолучитьСтатусЗаказа").УдалениеТестовыхДанных();
	
КонецПроцедуры

Процедура ОбновитьСтатусЗаказа() Экспорт
	
	КонструкторЗаказа = ЮТест.Данные().КонструкторОбъекта("Документы.ЗаказКлиента")
		.ФикцияОбязательныхПолей();
		
	ЗаказКлиента = КонструкторЗаказа.Записать(, Истина);
	
	ИсходныйСтатусВРегистре = РегистрыСведений.СтатусыЗаказов.АктуальныйСтатусЗаказа(ЗаказКлиента);
	
	Статус = ЮТТестовыеДанные.СлучайноеЗначениеПеречисления(Перечисления.СтатусыЗаказовКлиентов);
	Дата = ЮТТестовыеДанные.СлучайнаяДатаВБудущем();
	
	РегистрыСведений.СтатусыЗаказов.ОбновитьСтатусЗаказа(ЗаказКлиента, Статус, Дата);
	
	НовыйСтатусВРегистре = РегистрыСведений.СтатусыЗаказов.АктуальныйСтатусЗаказа(ЗаказКлиента, Дата);
	
	// проверяем, что статус обновился
	ЮТест.ОжидаетЧто(ИсходныйСтатусВРегистре)
		.ИмеетТип(Новый ОписаниеТипов("ПеречислениеСсылка.СтатусыЗаказовКлиентов"))
		.Равно(Перечисления.СтатусыЗаказовКлиентов.ПустаяСсылка())
		.НеРавно(НовыйСтатусВРегистре);
	
	КонецПроцедуры
	
Процедура ПолучитьСтатусЗаказа() Экспорт
	
	КонструкторЗаказа = ЮТест.Данные().КонструкторОбъекта("Документы.ЗаказКлиента")
		.ФикцияОбязательныхПолей();
	
	ЗаказКлиента = КонструкторЗаказа.Записать();
	
	Статус = ЮТТестовыеДанные.СлучайноеЗначениеПеречисления(Перечисления.СтатусыЗаказовКлиентов);
	Дата = ЮТТестовыеДанные.СлучайнаяДатаВБудущем();
	
	РегистрыСведений.СтатусыЗаказов.ОбновитьСтатусЗаказа(ЗаказКлиента, Статус, Дата);
	
	СтатусВРегистре = РегистрыСведений.СтатусыЗаказов.АктуальныйСтатусЗаказа(ЗаказКлиента, Дата);
	
	// проверяем, что статус такой же какой был установлен при обновлении
	ЮТест.ОжидаетЧто(Статус)
		.ИмеетТип(Новый ОписаниеТипов("ПеречислениеСсылка.СтатусыЗаказовКлиентов"))
		.Равно(СтатусВРегистре);
	
КонецПроцедуры

#КонецОбласти
